BEGIN;
BEGIN
EXPLAIN
select
	n_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue
from
	customer,
	orders,
	lineitem,
	supplier,
	nation,
	region
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and l_suppkey = s_suppkey
	and c_nationkey = s_nationkey
	and s_nationkey = n_nationkey
	and n_regionkey = r_regionkey
	and r_name = 'EUROPE'
	and o_orderdate >= date '1996-01-01'
	and o_orderdate < date '1996-01-01' + interval '1 year'
group by
	n_name
order by
	revenue desc;
                                                                                 QUERY PLAN                                                                                 
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=34743315.03..34743315.09 rows=25 width=38)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   ->  HashAggregate  (cost=34743314.14..34743314.45 rows=25 width=38)
         Group Key: nation.n_name
         ->  Hash Join  (cost=5308628.44..34735985.16 rows=732898 width=38)
               Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
               ->  Merge Join  (cost=5257551.44..34043638.85 rows=18324873 width=50)
                     Merge Cond: (lineitem.l_orderkey = orders.o_orderkey)
                     ->  Index Scan using lineitem_l_orderkey_idx on lineitem  (cost=0.57..26992183.93 rows=603040490 width=20)
                     ->  Materialize  (cost=5257544.39..5280448.92 rows=4580907 width=38)
                           ->  Sort  (cost=5257544.39..5268996.65 rows=4580907 width=38)
                                 Sort Key: orders.o_orderkey
                                 ->  Hash Join  (cost=1143002.72..4500208.12 rows=4580907 width=38)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Bitmap Heap Scan on orders  (cost=487540.03..3453403.03 rows=22904533 width=8)
                                             Recheck Cond: ((o_orderdate >= '1996-01-01'::date) AND (o_orderdate < '1997-01-01 00:00:00'::timestamp without time zone))
                                             ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..481813.90 rows=22904533 width=0)
                                                   Index Cond: ((o_orderdate >= '1996-01-01'::date) AND (o_orderdate < '1997-01-01 00:00:00'::timestamp without time zone))
                                       ->  Hash  (cost=594524.69..594524.69 rows=3000000 width=38)
                                             ->  Hash Join  (cost=2.69..594524.69 rows=3000000 width=38)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Seq Scan on customer  (cost=0.00..508272.00 rows=15000000 width=8)
                                                   ->  Hash  (cost=2.62..2.62 rows=5 width=30)
                                                         ->  Nested Loop  (cost=0.00..2.62 rows=5 width=30)
                                                               Join Filter: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4)
                                                                     Filter: (r_name = 'EUROPE'::bpchar)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=34)
               ->  Hash  (cost=32170.00..32170.00 rows=1000000 width=8)
                     ->  Seq Scan on supplier  (cost=0.00..32170.00 rows=1000000 width=8)
(30 rows)

COMMIT;
COMMIT
